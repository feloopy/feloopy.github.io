name: Fetch Feloopy Stats

on:
  schedule:
    - cron: '0 0 * * *'    # daily at 00:00 UTC
  workflow_dispatch:       # manual trigger

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4 pypistats

      - name: Fetch stats & build JSON
        run: |
          python << 'EOF'
          import json, datetime, re, requests

          stats = {}

          # 1. Daily/weekly/monthly via PyPI Stats “recent” API
          r = requests.get('https://pypistats.org/api/packages/feloopy/recent').json()
          d = r.get('data', {})
          stats['day']   = d.get('last_day', 0)
          stats['week']  = d.get('last_week', 0)
          stats['month'] = d.get('last_month', 0)          # :contentReference[oaicite:5]{index=5}

          # 2. Total via PyPI Stats “overall” API (sum non-mirror downloads)
          o = requests.get('https://pypistats.org/api/packages/feloopy/overall').json()
          stats['total'] = sum(item['downloads']
                                for item in o.get('data', [])
                                if item.get('category') == 'without_mirrors')  # :contentReference[oaicite:6]{index=6}

          # 3. GitHub stars via public REST API
          gh = requests.get('https://api.github.com/repos/feloopy/feloopy').json()
          stats['stars'] = gh.get('stargazers_count', 0)    # :contentReference[oaicite:7]{index=7}

          # 4. Compute star-to-download % server-side if desired:
          stats['star_pct'] = round((stats['stars'] / stats['month'] * 100)
                                    if stats['month'] else 0)

          # 5. Append daily GitHub stars history
          hist_file = 'stars_history.json'
          today = datetime.date.today().isoformat()
          try: history = json.load(open(hist_file))
          except: history = {}
          history[today] = stats['stars']
          json.dump(history, open(hist_file,'w'), indent=2)

          stats['fetched_at'] = datetime.datetime.utcnow().isoformat() + 'Z'
          json.dump(stats, open('stats.json','w'), indent=2)
          EOF

      - name: Commit & push
        run: |
          git config user.name github-actions
          git config user.email actions@github.com
          git add stats.json stars_history.json
          git diff --staged --quiet || git commit -m "Update stats.json"
          git push
